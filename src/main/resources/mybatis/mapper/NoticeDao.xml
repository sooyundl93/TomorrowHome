<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 공지사항 notice 테이블 xml -->

<mapper namespace="com.study.springboot.dao.INoticeDao"> 
	
	<!--*******************-->
	<!--* 작업자 : 김남권 *-->
	<!--*******************-->
	
	<!-- 중요 공지 조회 -->
	<select id="important_list" resultType="com.study.springboot.dto.NoticeDto"> 
		SELECT * FROM NOTICE WHERE IMPORTANT_FLAG = 'Y'
	</select>
	
	
	<!--*******************-->
	<!--* 작업자 : 장수연 *-->
	<!--*******************-->
	
	<!-- 공지사항 전체 조회 -->
	<select id="noticeList" resultType="com.study.springboot.dto.NoticeDto"> 
		SELECT *
	        FROM (
			        SELECT ROW_NUMBER() OVER(ORDER by post_no DESC) AS row_num, 
			        	   post_no, 
			        	   post_title, 
			        	   post_date, 
			        	   post_hits, 
			        	   important_flag
				        FROM notice
				        <include refid="search" />
		         )
	        WHERE row_num BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
	</select>

	<!-- ########## 공지사항 갯수 카운트 ########## -->
    <select id="noticeCount" resultType="int">
        SELECT count(post_no) 
        	FROM notice
        	<include refid="searchJSY" />
    </select>
 
  	<!-- ########## 검색 및 페이징 옵션 ########## -->
    <sql id="searchJSY">
        <choose>
            <when test="search_option == 'all' ">
                WHERE post_title LIKE '%' || #{search_keyword}||'%'
                   OR post_content LIKE '%'||#{search_keyword}||'%'
            </when>
            <otherwise>
                WHERE ${search_option} LIKE '%'||#{search_keyword}||'%'
            </otherwise>
        </choose>
    </sql>
	
	<!-- 공지사항 상세 조회 -->
	<select id="noticeView" resultType="com.study.springboot.dto.NoticeDto">
		SELECT * FROM notice WHERE post_no=#{param1} 
	</select>
	
	<!-- 공지사항 정보 가져오기 -->
	<select id="noticeFlag" resultType="com.study.springboot.dto.NoticeDto">
		SELECT * FROM NOTICE WHERE post_no=#{param1}
	</select>
	
	<!-- 공지사항 조회수 +1 UPDATE -->
	<update id="hit">
		UPDATE notice 
			SET post_hits = post_hits+1 
			WHERE post_no=#{param1}
	</update>
	
	
	<!--*******************-->
	<!--* 작업자 : 심준엽 *-->
	<!--*******************-->
    
    <!-- ########## 레코드 수 ########## -->
    <select id="countRecords" resultType="int">
        SELECT count(post_no) 
            FROM notice
        <include refid="search" />
    </select>
    
    <!-- ########## 목록 생성 ########## -->
    <select id="relationInstance" resultType="com.study.springboot.dto.NoticeDto">
        SELECT *
            FROM (
	            SELECT ROW_NUMBER() OVER(ORDER by ${sortRecords}, post_no DESC) AS
	                row_num, post_no, user_id, post_title, post_content, post_date, post_hits, important_flag
	            FROM notice
	            <include refid="search" />
	            )
            WHERE row_num BETWEEN #{firstRecordIndex} AND #{lastRecordIndex}
    </select>
    
    <!-- ########## 검색 및 페이징 옵션 ########## -->
    <sql id="search">
        <choose>
            <when test="search_option == 'all' ">
                WHERE (
                    LOWER( post_title ) LIKE '%' || #{search_keyword} || '%' OR
                    LOWER( post_content ) LIKE '%' || #{search_keyword} || '%' OR
                    LOWER( post_no ) LIKE '%' || #{search_keyword} || '%' OR
                    LOWER( user_id ) LIKE '%' || #{search_keyword} || '%'
                )
            </when>
            <otherwise>
                WHERE LOWER( ${search_option} ) LIKE '%'||#{search_keyword}||'%'
            </otherwise>
        </choose>
    </sql>
    
    <!-- ########## 공지글 업로드 ########## -->    
    <insert id="insertRecord">
        INSERT INTO notice( post_no, user_id, post_title, post_content, important_flag ) 
			VALUES( notice_seq.NEXTVAL, #{ user_id }, #{ post_title }, #{ post_content }, #{ important_flag } )
    </insert>
    
    <!-- ########## 공지글 조회 ########## -->
    <select id="detail" resultType="com.study.springboot.dto.NoticeDto">
        SELECT *
            FROM notice
            WHERE post_no = #{ post_no }
    </select>
    
    <!-- ########## 공지글 수정 ########## -->
    <update id="updateRecord">
        UPDATE notice
          SET post_title = #{ post_title },
              post_content = #{ post_content },
              important_flag = #{ important_flag }
          WHERE post_no = #{ post_no }
    </update> 
    
    <!-- ########## 이전, 다음 공지글 검색 ########## -->
    <select id="nearbyRecords" resultType="java.util.HashMap">
		SELECT *
			FROM(
			    SELECT  post_no, 
			            LAG(post_no) OVER(ORDER BY post_no) prev_no, 
			            LAG(post_title) OVER(ORDER BY post_no) prev_title,
			            LEAD(post_no) OVER(ORDER BY post_no) next_no, 
			            LEAD(post_title) OVER(ORDER BY post_no) next_title
			       FROM notice 
			    )
			WHERE post_no = #{ post_no }
    </select>
	
</mapper>